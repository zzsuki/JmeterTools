plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group 'io.github.zzsuki'
version '1.0'


repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

//sourceSets {
//    main {
//        java {
//            srcDirs 'src/main/java'
//        }
//    }
//}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.10'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.8.2'
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.76'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.5'
    implementation group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.4'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.0'
    implementation 'org.apache.commons:commons-pool2:2.11.1'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
}

//java {
//    toolchain {
//        languageVersion.set(JavaLanguageVersion.of(8))
//    }
//}

test {
    useJUnitPlatform()
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            artifactId = 'jmetertools'
            groupId = 'io.github.zzsuki'
            version = "1.0"
            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username "zzsuki"
                password "9e$a*ykMSPPm.Q6"
            }
        }
    }
}

signing {
    sign configurations.archives
}